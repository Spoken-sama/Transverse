# 🔐 Password Devil

## 🎯 Sujet

**Créer un jeu python incluant des trajéctoires**

## Notre jeu

La création de *Password Devil* a soulevé plusieurs défis techniques et conceptuels :

- La **fusion entre le gameplay cérébral ** et le **gameplay d’action en temps réel** a demandé de nombreux ajustements pour que l’un ne gêne pas l’autre.
- Les **animations** ont été longues à réaliser(merci benjamin) pour donner vie aux éléments visuels tout en respectant le rythme du jeu.
- Les **choix des musiques adaptées** et la **création des bruitages** à souvent mis en désaccord mais a fini pour le mieux.

## 🧠 Description

**Password Devil** est un jeu de réflexion et d’agilité, où le joueur doit créer un mot de passe répondant à des **règles de sécurité** de plus en plus tordues, tout en **esquivant des boulets de canon** en temps réel.

Le jeu commence avec des contraintes simples (ex : “minimum 5 caractères”, “inclure un chiffre”), mais à chaque niveau, les règles deviennent plus nombreuses, plus précises, et parfois complètement folles.

Pendant ce temps, le joueur contrôle un petit personnage à l’écran et doit **éviter les projectiles** tirés par des canons **tout en tapant le mot de passe**.

Pour acceder à une nouvelle règle, il faut cliquer
## 🎮 Fonctionnement du jeu

- Le joueur contrôle **à la fois la saisie du mot de passe** et le **déplacement de l’avatar** sur l’écran pour esquiver les tirs.
- Des **retours en temps réel** indiquent quelles règles sont respectées ou non.
- Plus le joueur **met de temps** à créer un mot de passe valide, plus les **canons deviennent agressifs**.
- Un faux pas, une lettre mal placée, ou un boulet mal esquivé… et c’est la fin.

## 🏁 Objectif

Atteindre les **niveaux les plus profonds** du royaume du diable du mot de passe, où **réflexion**, **rapidité** et **sang-froid** sont mis à rude épreuve.

## 👨‍👩‍👧‍👦 Membres du projet

- **Benjamin Duramé-Gremont**
- **David Dehondt**
- **Lola Lievain-Thiébaut**
- **Mariam Beldi**

## 👾 Technologies utilisées

- [Python 3.x](https://www.python.org/)
- [Pygame](https://www.pygame.org/) pour le moteur de jeu
- Sons personnalisés (WAV, MP3), sprites animés (PNG)

## 🔧 Prérequis

- Python 3.7+
- Installer les dépendances :

Le cœur du jeu se trouve dans main.py. Voici les principales parties du code :

Initialisation
Chargement des ressources (images, sons), définition de la fenêtre de jeu, polices, etc.

Boucle principale
Elle gère :

le dessin de l’arrière-plan et des sprites,

la détection de collision entre projectiles et joueur,

la vérification en temps réel des règles du mot de passe,

l’augmentation de la difficulté (tir plus rapide) si le joueur tarde.

Contrôle du joueur

Flèches gauche/droite pour déplacer le personnage.

Clavier alphanumérique pour entrer le mot de passe.

Changement d’animation en fonction du mouvement.

Règles du mot de passe
À chaque niveau, le jeu vérifie que les règles sont respectées. Les erreurs sont signalées en temps réel via un retour visuel et sonore.

Animation des projectiles
Les canons tirent des boulets en suivant une trajectoire définie. Une fois touché, le joueur meurt et l'écran de game over apparaît.

Écrans de transition
Écran d'introduction, de victoire, de game over, avec des interactions pour recommencer ou quitter.

